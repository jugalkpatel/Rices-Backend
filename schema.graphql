### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AllCommunities {
  communities: [CommunityResult!]!
}

union AllCommunitiesResponse = AllCommunities | CommunityError

type AuthError implements CommonError {
  message: String!
}

type AuthPayload {
  user: User!
}

union AuthResponse = AuthError | AuthPayload

interface CommonError {
  message: String!
}

type Community {
  createdAt: DateTime!
  creator: User!
  description: String!
  id: String!
  members: [User]
  title: String!
}

type CommunityError implements CommonError {
  message: String!
}

union CommunityResponse = CommunityError | CommunityResult

type CommunityResult {
  id: String!
  title: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

union GetCommunityResponse = Community | CommunityError

type IRefresh {
  success: Boolean!
}

type Mutation {
  CreateCommunity(description: String!, name: String!): CommunityResponse!
  authenticate: AuthResponse!
  login(email: String!, password: String!): AuthResponse!
  refresh: RefreshResponse!
  register(email: String!, name: String!, password: String!): AuthResponse!
}

type Query {
  GetCommunityResponse(name: String!): GetCommunityResponse!
  allCommunities: AllCommunitiesResponse!
  authenticate: AuthResponse!
  user(email: String!): User!
}

union RefreshResponse = AuthError | IRefresh

type User {
  email: String!
  id: String!
  name: String!
}
